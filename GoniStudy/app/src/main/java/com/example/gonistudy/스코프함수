
# 스코프 함수 Scope Function
    : 스코프 함수를 사용하여 반복을 막아줄 수 있다.
      이 방법은 코드의 가독성을 높여주고 품질 좋은 코드를 만들어 줄 수 있다.

(1) run, let, apply, also

    aList = mutableListOf(1,2,3,4)
    1) run
        aList.run{
            add(1)
        }
    2) let : it과 같이 예약어를 사용하여 어디서 무엇을 하는 것인 지 알 수 있다.(변경 가능)
        aList.let{it ->
            it.add(1)
        }
    3) 동일 관계
        run == apply
        let == also
    4) 차이점
        스코프 함수는 변수로 저장할 수 있다. 하지만 저장형태는 각각 다르다.
        - apply, also : 수행되어 진 모든 값들을 가져온다.
            val result = aList.apply{}
            result : mutableListOf(1,2,3,4)
        - run, let : 마지막 값이 저장
            val result = aList.run{size}
            result : 4

(2) with
    : 이 또한 반복을 막아주는 스코프 함수
    ex) 바인딩 사용 시
        binding.btn.setOnClick
        binding.textView.text
        binding.editText.text
    =>
        with(binding){
            btn.setOnClick
            textView.text
            editText.text
        }










// with
// binding : with 사용 굳